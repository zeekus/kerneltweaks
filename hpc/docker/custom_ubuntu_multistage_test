# Base image for building the environment
FROM ubuntu:22.04 AS build

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/New_York

# Set the working directory
WORKDIR /home/ted.knab/spack_environment_build

# Add Docker's official GPG key and repository, install required packages
RUN apt-get update && apt-get install -y ca-certificates curl gnupg && \
    install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y \
        build-essential \
        environment-modules \
        tcl \
        curl \
        file \
        git \
        wget \
        pkgconf \
        python3 \
        python3-dev \
        python3-pip \
        python-is-python3 \
        tzdata \
        perl \
        gawk \
        lz4 \ 
        libssl-dev \
        cmake \
        texinfo \
        tar \
        expat \
        vim \
        bc \	
        gfortran \	
        kmod \	
        gcc && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Clone Spack repository
RUN git clone https://github.com/spack/spack.git /opt/spack

# Copy over bash script to build Spack environment
COPY build_spack_env.bash /opt/spack/build_spack_env.bash

# Run the build script to set up the Spack environment
RUN chmod +x /opt/spack/build_spack_env.bash && /opt/spack/build_spack_env.bash

# Final stage for runtime
FROM ubuntu:22.04 AS final

# Set environment variables for runtime
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/New_York
ENV PATH="/opt/spack/bin:${PATH}"

# Install only the necessary runtime packages
RUN apt-get update && apt-get install -y tzdata && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy Spack installation from the build stage
COPY --from=build /opt/spack /opt/spack

# Keep container running (you can replace this with your application entry point)
CMD ["tail", "-f", "/dev/null"]